name: Zap Scan CI

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      issues: write  
      
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask gunicorn
          pip install -r requirements.txt

      - name: Initialize Database
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/mydb
        run: |
          flask db upgrade

      - name: Start Flask application
        run: |
          nohup gunicorn --bind 0.0.0.0:5000 todo:app > /dev/null 2>&1 &
        env:
          FLASK_APP: todo.py
          FLASK_ENV: development
          DATABASE_URL: postgresql://user:password@localhost:5432/mydb

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: 'https://localhost:5000/'